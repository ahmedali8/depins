services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db_staking
    environment:
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  nestjs-app:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile}
    container_name: app_staking
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      JWT_SECRET: $JWT_SECRET
      REFRESH_SECRET: $REFRESH_SECRET
      SOLANA_TOKEN_PROGRAM_ID: $SOLANA_TOKEN_PROGRAM_ID
      SOLANA_TOKEN_PROGRAM_ID_22: $SOLANA_TOKEN_PROGRAM_ID_22
      NODE_ENV: ${NODE_ENV:-production}
    volumes:
      - ./src:/app/src # Sync local src folder with container's src folder
      - ./node_modules:/app/node_modules # Avoid re-installing node_modules
    depends_on:
      - postgres
    ports:
      - '3000:3000'
    # command: npm run start:dev

volumes:
  pgdata: # Volume for PostgreSQL
  redis-data: # Volume for Redis
